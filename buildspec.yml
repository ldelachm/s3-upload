version: 0.2
run-as: root
env:
 shell: "bash"
 variables:
  CONTAINERD_ADDRESS: "/run/docker/containerd/containerd.sock"

phases:
  pre_build:
    commands:
       - export AWS_CREDENTIALS=$(wget -qO- http://169.254.170.2/$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI)
       - export AWS_ACCESS_KEY_ID=$(echo $AWS_CREDENTIALS | jq -r .AccessKeyId)
       - export AWS_SECRET_ACCESS_KEY=$(echo $AWS_CREDENTIALS | jq -r .SecretAccessKey)
       - export AWS_SESSION_TOKEN=$(echo $AWS_CREDENTIALS | jq -r .Token)
  build:
    commands:
       - aws sts get-caller-identity
       - echo "Hello Test"
       - node --version
       - npm --version
       - docker info
       # - docker build -t test:latest --build-arg AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY --build-arg AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN .
       - docker build -t test:latest --build-arg AWS_ROLE_ARN=arn:aws:iam::461115678255:role/codebuild-s3-upload-y-service-role --build-arg AWS_ROLE_SESSION_NAME=AWSCodeBuild-54423a8e-3e3e-4b28-bcab-612f424867d5 .
       - docker build -t test:latest --build-arg AWS_ROLE_ARN=arn:aws:iam::964771811575:role/ecs-fleet-instance-role --build-arg AWS_ROLE_SESSION_NAME=i-01378b440b75c7040 .
       - docker run --rm --network host amazon/aws-cli sts get-caller-identity
artifacts:
  files:
     - '**/*'
